trigger: 
  - development 
  - main 
pr: none

pool:
  vmImage: "ubuntu-latest"
   
resources:
  repositories:
    - repository: "ThermaxDevOpsAutomation"
      type: "git"
      name: "Customer Portal/ThermaxDevOpsAutomation"
      ref: "main"  

stages: 
 - stage: "DEV"
   condition: ${{ eq(variables['Build.SourceBranch'], 'refs/heads/development') }}
   variables:
   - group: DB-Dev
   jobs:
    - template: CI/Build&PushDocker.yml@ThermaxDevOpsAutomation
      parameters:
        useSonar: false
        sonarOrganization: NA
        appname: Scheduler
        sonarKey: ThermaxCP
        containerRegistry: acrcinthermaxdev.azurecr.io
        environmentBranch: development
        environmentName: dev
        dockerRegistryServiceConnection: Thermaxdockerdev
        imageRepository: dev/Scheduler
        MAVEN_OPTS: '-Dmaven.test.skip=true'

    - template: CD/k8s-deploy.yml@ThermaxDevOpsAutomation
      parameters:
          appName: tcpscheduler 
          environmentName: Dev
          environmentBranch: Development
          filepath: 'Devops/k8s-scheduler.yaml'
          containerreg: acrcinthermaxdev.azurecr.io
          imagerepo: dev/scheduler
          k8ssvcconn: Thermaxk8sdev 
          springProfilesActive: dev
          dbHost: $(dbHost)
          dbUser: $(dbUsername)
          dbPassword: $(dbPassword)
          dbName: $(dbName)

 - stage: "UAT"
   condition: ${{ eq(variables['Build.SourceBranch'], 'refs/heads/main') }}
   variables:
   - group: DB-QA
   jobs:
    - template: CI/Build&PushDocker.yml@ThermaxDevOpsAutomation
      parameters:
        useSonar: false
        sonarOrganization: NA
        appname: Scheduler
        sonarKey: ThermaxCP
        containerRegistry: acrcinthermaxdev.azurecr.io
        environmentBranch: main
        environmentName: uat
        dockerRegistryServiceConnection: Thermaxdockerdev
        imageRepository: qa/Scheduler
        MAVEN_OPTS: '-Dmaven.test.skip=true'

    - template: CD/k8s-deploy.yml@ThermaxDevOpsAutomation
      parameters:
          appName: tcpscheduler 
          environmentName: uat
          environmentBranch: main
          filepath: 'Devops/k8s-scheduler.yaml'
          containerreg: acrcinthermaxdev.azurecr.io
          imagerepo: qa/scheduler
          k8ssvcconn: Thermaxk8sqa
          springProfilesActive: qa
          dbHost: $(dbHost)
          dbUser: $(dbUsername)
          dbPassword: $(dbPassword)
          dbName: $(dbName)
          replicaset: 4

 - stage: "PROD"
   condition: ${{ eq(variables['Build.SourceBranch'], 'refs/heads/main') }}
   variables:
   - group: DB-Prod
   jobs:
    - template: CI/Build&PushDocker.yml@ThermaxDevOpsAutomation
      parameters:
        useSonar: false
        sonarOrganization: NA
        sonarKey: ThermaxCP
        appname: tcpschedulers
        containerRegistry: acrcintcpprod.azurecr.io
        environmentBranch: main
        environmentName: prod
        dockerRegistryServiceConnection: ThermaxACRProd
        imageRepository: prod/tcpschedulers
        MAVEN_OPTS: '-Dmaven.test.skip=true'

    - template: CD/k8s-deploy.yml@ThermaxDevOpsAutomation
      parameters:
          appName: tcpschedulers
          environmentName: prod
          environmentBranch: main
          filepath: 'Devops/k8s-scheduler.yaml'
          containerreg: acrcintcpprod.azurecr.io
          imagerepo: prod/tcpschedulers
          k8ssvcconn: ThermaxK8sProd
          springProfilesActive: prod
          dbHost: $(dbHost)
          dbUser: $(dbUsername)
          dbPassword: $(dbPassword)
          dbName: $(dbName)
          replicaset: 4 