trigger: none
pr: none

pool:
  vmImage: "ubuntu-latest"
   
resources:
  repositories:
    - repository: "ThermaxDevOpsAutomation"
      type: "git"
      name: "Customer Portal/ThermaxDevOpsAutomation"
      ref: "main"  

stages: 
 - stage: "DEV"
   jobs:
    - template: CI/Build&PushDocker.yml@ThermaxDevOpsAutomation
      parameters:
        useSonar: false
        sonarOrganization: NA
        appname: Salesforce
        sonarKey: ThermaxCP
        containerRegistry: acrcinthermaxdev.azurecr.io
        environmentBranch: development
        environmentName: Dev
        dockerRegistryServiceConnection: Thermaxdockerdev
        imageRepository: dev/SalesforceManagement
        MAVEN_OPTS: '-Dmaven.test.skip=true'

    - template: CD/k8s-deploy.yml@ThermaxDevOpsAutomation
      parameters:
          appName: tcpsalesforce
          environmentName: Dev
          environmentBranch: Development
          filepath: 'Devops/k8s-salesforce.yaml'
          containerreg: acrcinthermaxdev.azurecr.io
          imagerepo: dev/salesforcemanagement
          k8ssvcconn: Thermaxk8sdev 
          springProfilesActive: dev
 
 - stage: "QA"
   jobs:
    - template: CI/Build&PushDocker.yml@ThermaxDevOpsAutomation
      parameters:
        useSonar: false
        sonarOrganization: NA
        appname: Salesforce
        sonarKey: ThermaxCP
        containerRegistry: acrcinthermaxdev.azurecr.io
        environmentBranch: development
        environmentName: QA
        dockerRegistryServiceConnection: Thermaxdockerdev
        imageRepository: qa/SalesforceManagement
        MAVEN_OPTS: '-Dmaven.test.skip=true'

    - template: CD/k8s-deploy.yml@ThermaxDevOpsAutomation
      parameters:
          appName: tcpsalesforce
          environmentName: QA
          environmentBranch: Development
          filepath: 'Devops/k8s-salesforce.yaml'
          containerreg: acrcinthermaxdev.azurecr.io
          imagerepo: qa/salesforcemanagement
          k8ssvcconn: Thermaxk8sqa
          springProfilesActive: qa